gem install -s http://gems.github.com tmm1-perftools.rb # NO
gem install perftools.rb

CPUPROFILE=/tmp/my_app_profile RUBYOPT="-r`gem which perftools | tail -1`" ruby robot_test.rb -n test_performance
# I cntrl-c'd this puppy...

# then ran:
/Users/jaytee/.rvm/gems/ree-1.8.7-2010.02/gems/perftools.rb-0.5.0/bin/pprof.rb --gif /tmp/my_app_profile > /tmp/my_app_profile.gif
# Dropping nodes with <= 34 samples; edges with <= 6 abs(samples)

# finally:
open /tmp/my_app_profile.gif

# showed cool graph!
#
# http://google-perftools.googlecode.com/svn/trunk/doc/cpuprofile.html
# Each node represents a procedure. The directed edges indicate caller to callee relations. Each node is formatted as follows:
#
# Class Name
# Method Name
# local (percentage)
# of cumulative (percentage)
#
# The last one or two lines contains the timing information. (The profiling is done via a sampling method, where by default we take 100 samples a second. Therefor one unit of time in the output corresponds to about 10 milliseconds of execution time.) The "local" time is the time spent executing the instructions directly contained in the procedure (and in any other procedures that were inlined into the procedure). The "cumulative" time is the sum of the "local" time and the time spent in any callees. If the cumulative time is the same as the local time, it is not printed.
#
# For instance, the timing information for test_main_thread() indicates that 155 units (about 1.55 seconds) were spent executing the code in test_main_thread() and 200 units were spent while executing test_main_thread() and its callees such as snprintf().
#
